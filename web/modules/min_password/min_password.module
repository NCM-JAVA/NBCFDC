<?php

/**
 * @file
 * Description.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Add password length field to the user settings form.
 */
function min_password_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'user_admin_settings':
      $config_factory = \Drupal::configFactory();
      $config = $config_factory->get('user.settings');
      $form['registration_cancellation']['password_length'] = [
        '#type' => 'number',
        '#title' => t('Minimum password length'),
        '#default_value' => $config->get('password_length') ? $config->get('password_length') : 1,
        '#field_suffix' => t('characters'),
        '#min' => 1,
        '#description' => t("Enter minimum password length here. This setting doesn't affect existing users."),
      ];
      $form['#submit'][] = 'min_password_user_admin_settings_form_submit';
      break;

    case 'user_form':
    case 'user_register_form':
      $form['#validate'][] = 'min_password_user_form_validate';
      break;
  }
}

/**
 * Submit user configuration form.
 */
function min_password_user_admin_settings_form_submit(&$form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('user.settings')
    ->set('password_length', $form_state->getValue('password_length'))
    ->save();
}

/**
 * Validate user and user registration forms.
 */
function min_password_user_form_validate(&$form, FormStateInterface $form_state) {
  $password_length = \Drupal::configFactory()
    ->get('user.settings')
    ->get('password_length');

  $reset = \Drupal::request()->query->get('pass-reset-token');
  $pass = strlen($form_state->getValue('pass'));
  if ($reset && $pass < $password_length ||
    0 < $pass && $pass < $password_length) {
    $form_state->setErrorByName('pass',
      t('The minimum password length at least %number chars.', ['%number' => $password_length]));
  }
}
